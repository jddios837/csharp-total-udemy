@page "/university"

<PageTitle>List of Universities</PageTitle>

@using Day19_LINQ_SQL.Data
@using Day19_LINQ_SQL.Data.Models
@using Microsoft.EntityFrameworkCore
@inject NavigationManager Navigation
@inject UniversityDbContext DbContext

@* <button class="btn btn-primary" >Add a New University</button> *@
<NavLink class="btn btn-primary" href="university/new">Add a New University</NavLink>
<h1>List of Universities</h1>

@* <p>This component demonstrates fetching data from a service.</p> *@

@if (_universities == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Options</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var u in _universities)
        {
            <tr>
                <td>@u.Id</td>
                <td>@u.Name</td>
                <td>
                    <button 
                        class="btn btn-secondary"
                        @onclick="@(() => Navigation.NavigateTo($@"/university/edit/{u.Id}"))">
                    Edit
                    </button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    // private WeatherForecast[]? forecasts;
    private University[]? _universities;

    protected override async Task OnInitializedAsync()
    {
        // forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        _universities = await DbContext.University.ToArrayAsync();
        // _dbContext.University.Add(new University { Name = "DDU" });
        // await _dbContext.SaveChangesAsync();
    }

}